{"version":3,"sources":["images/writing.png","components/FormComponent.js","components/CreateMeme.js","images/meme.png","components/GetRangomMeme.js","App.js","reportWebVitals.js","index.js"],"names":["FormComponent","state","topText","bottomText","handleChange","bind","event","target","name","value","this","setState","type","placeholder","onChange","className","React","Component","CreateMeme","props","useState","post","setPost","useEffect","fetch","then","response","json","data","memes","Math","floor","random","url","openModal","showModal","src","alt","onClick","writingImg","GetRangomMeme","catch","err","console","log","openModal2","meme","App","showModalR","setShowModalR","showModalC","setShowModalC","modalRef","useRef","ref","e","current","setShowModal","prevState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.087cbdfb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/writing.be2d84ef.png\";","import React from \"react\"\r\n\r\nclass FormComponent extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            topText: \"\",\r\n            bottomText: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(event){\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\nrender(){\r\n    return(\r\n    <div>\r\n        <form>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"top text..\" \r\n                name=\"topText\"\r\n                onChange={this.handleChange}\r\n            />\r\n            <h2 className=\"topTextStyle\">{this.state.topText}</h2>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"bottom text..\" \r\n                name=\"bottomText\"\r\n                onChange={this.handleChange}\r\n            />\r\n            <h2 className=\"bottomTextStyle\">{this.state.bottomText}</h2>\r\n        </form>\r\n    </div>)\r\n}\r\n}\r\n\r\n\r\nexport default FormComponent","import writingImg from \"../images/writing.png\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FormComponent from \"./FormComponent\";\r\n\r\nfunction myRandomNumber() {\r\n  return Math.floor(Math.random() * 100);\r\n}\r\n\r\nfunction CreateMeme(props) {\r\n  // console.log(props)\r\n\r\n  const [post, setPost] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log(data.data.memes[1].url)\r\n        setPost(data.data.memes[myRandomNumber()].url);\r\n      });\r\n  }, [props.openModal]);\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"container-center\">\r\n        {props.showModal ? (\r\n          <div className=\"createMemeModal\">\r\n            <div className=\"imageContainer\">\r\n              <div className=\"topTextImageContainer\">\r\n                <img src={post} alt=\"Sweet PIC\" className=\"memeImage\" />\r\n                <FormComponent />\r\n              </div>\r\n            </div>\r\n            <button className=\"btn-close\" onClick={props.openModal}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n\r\n        <h1>\r\n          <span className=\"createRandomTitle\">Create</span> Random Meme\r\n        </h1>\r\n        <img className=\"imageIcon\" src={writingImg} alt=\"icon\" />\r\n        <div className=\"buttonAjst\">\r\n          <button className=\"btnStart\" onClick={props.openModal}><span className=\"createRandomTitle\">Create</span> Random Meme</button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateMeme;\r\n","export default __webpack_public_path__ + \"static/media/meme.18bf1999.png\";","import meme from \"../images/meme.png\";\r\nimport React, { useState,  useEffect } from \"react\";\r\n\r\nfunction GetRangomMeme(props) {\r\n  const [post, setPost] = useState(\"\")\r\n\r\n  useEffect(()=>{\r\n    fetch(\"https://meme-api.herokuapp.com/gimme\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // console.log(data.url)\r\n        setPost(data.url)\r\n      })\r\n      .catch(err =>{\r\n        console.log(err)\r\n      })\r\n  },[props.openModal2])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"container-center\">\r\n        {props.showModal ? (\r\n          <div className=\"createMemeModal\">\r\n            <div className=\"imageContainer\">\r\n            <img className=\"memeImage\" src={post} alt=\"meme\" />\r\n            </div>\r\n            <button className=\"btn-close\" onClick={props.openModal2}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n\r\n        <h1><span className=\"getRandomTitle\" >Get</span> Random Meme</h1>\r\n        <img className=\"imageIcon\" src={meme} alt=\"icon\" />\r\n        <div className=\"buttonAjst\">\r\n          <button className=\"btnStart\" onClick={props.openModal2} ><span className=\"getRandomTitle\" >Get</span> Random Meme</button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GetRangomMeme;\r\n\r\n\r\n","import \"./App.css\";\nimport CreateMeme from \"./components/CreateMeme\";\nimport GetRangomMeme from \"./components/GetRangomMeme\";\nimport { useState, useRef } from \"react\";\n\nfunction App() {\n  const [showModalR, setShowModalR] = useState(false);\n  const [showModalC, setShowModalC] = useState(false);\n\n  const openModal = () => {\n    setShowModalR((prevState) => !prevState);\n  };\n  const openModal2 = () => {\n    setShowModalC((prevState) => !prevState);\n  };\n\n  // Closing modal by clicking on the background.\n  const modalRef = useRef();\n  const closeModal = (e) => {\n    if (modalRef.current === e.target) {\n      setShowModalR(false);\n      setShowModalC(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" ref={modalRef} onClick={closeModal}>\n        <CreateMeme\n          showModal={showModalR}\n          setShowModal={setShowModalR}\n          openModal={openModal}\n        />\n        <GetRangomMeme\n          showModal={showModalC}\n          setShowModal={setShowModalC}\n          openModal2={openModal2}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}